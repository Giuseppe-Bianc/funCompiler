cmake_minimum_required(VERSION 3.14)
project(FunComp C CXX)

find_program(CCACHE_PROGRAM ccache)
if (CCACHE_PROGRAM)
  set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CCACHE_PROGRAM}")
endif()

# Export compilation database in JSON format.
set(CMAKE_EXPORT_COMPILE_COMMANDS on)
set(CMAKE_C_STANDARD 17)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_CXX_EXTENSIONS ON)
set(CMAKE_C_EXTENSIONS ON)
MESSAGE(STATUS "This is Binary dir" ${PROJECT_BINARY_DIR})
MESSAGE(STATUS "This is Source dir" ${PROJECT_SOURCE_DIR})
message(STATUS CMAKE_CXX_STANDARD="${CMAKE_CXX_STANDARD}")
message(STATUS CMAKE_CXX_EXTENSIONS="${CMAKE_CXX_EXTENSIONS}")
message(STATUS CMAKE_CXX_STANDARD_REQUIRED="${CMAKE_CXX_STANDARD_REQUIRED}")
message(STATUS CMAKE_C_STANDARD="${CMAKE_C_STANDARD}")
message(STATUS CMAKE_C_EXTENSIONS="${CMAKE_C_EXTENSIONS}")
message(STATUS CMAKE_C_STANDARD_REQUIRED="${CMAKE_C_STANDARD_REQUIRED}")

add_executable (func 
"src/main.c")